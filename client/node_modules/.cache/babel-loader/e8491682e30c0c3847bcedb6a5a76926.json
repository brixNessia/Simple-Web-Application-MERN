{"ast":null,"code":"import Http from \"utils/Http\";\nimport * as types from \"./actionTypes\";\nconst initialState = {\n  isAuthenticated: false,\n  signInFailed: false,\n  isPending: false,\n  error: {},\n  user: null\n};\n\nfunction reducer(state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case types.AUTH_SIGNIN_SUCCEEDED:\n      console.log(\"inside reducer\", payload);\n      setToken(payload);\n      return { ...state,\n        isAuthenticated: true,\n        isPending: false,\n        signInFailed: false\n      };\n\n    case types.AUTH_SIGNIN_PENDING:\n      return { ...state,\n        isPending: true,\n        error: {},\n        signInFailed: false\n      };\n\n    case types.AUTH_SIGNIN_FAILED:\n      return { ...state,\n        isPending: false,\n        error: payload,\n        signInFailed: true\n      };\n\n    case types.AUTH_CHECK:\n      const accessToken = localStorage.getItem(\"accessToken\");\n      const currentState = { ...state,\n        isAuthenticated: !!accessToken\n      };\n\n      if (currentState.isAuthenticated) {\n        Http.defaults.headers.common[\"Authorization\"] = `Bearer ${accessToken}`;\n      }\n\n      return currentState;\n\n    case types.AUTH_SIGNOUT:\n      // clear tokens\n      localStorage.removeItem(\"accessToken\");\n      return { ...state,\n        isAuthenticated: false,\n        user: null\n      };\n\n    case types.AUTH_SET_USER:\n      return { ...state,\n        user: payload\n      };\n\n    default:\n      return state;\n  }\n}\n/**\r\n * Stores the access_token in local storage\r\n * and updates the HTTP header\r\n *\r\n * @param paload\r\n */\n\n\nfunction setToken({\n  access_token\n}) {\n  localStorage.setItem(\"accessToken\", access_token);\n  Http.defaults.headers.common[\"Authorization\"] = `Bearer ${access_token}`;\n}\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/nessia.brb/development/React-JS/the-project-one/src/modules/auth/store/reducer.js"],"names":["Http","types","initialState","isAuthenticated","signInFailed","isPending","error","user","reducer","state","action","type","payload","AUTH_SIGNIN_SUCCEEDED","console","log","setToken","AUTH_SIGNIN_PENDING","AUTH_SIGNIN_FAILED","AUTH_CHECK","accessToken","localStorage","getItem","currentState","defaults","headers","common","AUTH_SIGNOUT","removeItem","AUTH_SET_USER","access_token","setItem"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,KAAKC,KAAZ,MAAuB,eAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,eAAe,EAAE,KADE;AAEnBC,EAAAA,YAAY,EAAE,KAFK;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,KAAK,EAAE,EAJY;AAKnBC,EAAAA,IAAI,EAAE;AALa,CAArB;;AAQA,SAASC,OAAT,CAAiBC,KAAK,GAAGP,YAAzB,EAAuCQ,MAAvC,EAA+C;AAC7C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKV,KAAK,CAACY,qBAAX;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,OAA9B;AAEAI,MAAAA,QAAQ,CAACJ,OAAD,CAAR;AACA,aAAO,EACL,GAAGH,KADE;AAELN,QAAAA,eAAe,EAAE,IAFZ;AAGLE,QAAAA,SAAS,EAAE,KAHN;AAILD,QAAAA,YAAY,EAAE;AAJT,OAAP;;AAMF,SAAKH,KAAK,CAACgB,mBAAX;AACE,aAAO,EAAE,GAAGR,KAAL;AAAYJ,QAAAA,SAAS,EAAE,IAAvB;AAA6BC,QAAAA,KAAK,EAAE,EAApC;AAAwCF,QAAAA,YAAY,EAAE;AAAtD,OAAP;;AACF,SAAKH,KAAK,CAACiB,kBAAX;AACE,aAAO,EACL,GAAGT,KADE;AAELJ,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,KAAK,EAAEM,OAHF;AAILR,QAAAA,YAAY,EAAE;AAJT,OAAP;;AAMF,SAAKH,KAAK,CAACkB,UAAX;AACE,YAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAApB;AACA,YAAMC,YAAY,GAAG,EACnB,GAAGd,KADgB;AAEnBN,QAAAA,eAAe,EAAE,CAAC,CAACiB;AAFA,OAArB;;AAKA,UAAIG,YAAY,CAACpB,eAAjB,EAAkC;AAChCH,QAAAA,IAAI,CAACwB,QAAL,CAAcC,OAAd,CAAsBC,MAAtB,CAA6B,eAA7B,IAAiD,UAASN,WAAY,EAAtE;AACD;;AAED,aAAOG,YAAP;;AACF,SAAKtB,KAAK,CAAC0B,YAAX;AACE;AACAN,MAAAA,YAAY,CAACO,UAAb,CAAwB,aAAxB;AAEA,aAAO,EACL,GAAGnB,KADE;AAELN,QAAAA,eAAe,EAAE,KAFZ;AAGLI,QAAAA,IAAI,EAAE;AAHD,OAAP;;AAKF,SAAKN,KAAK,CAAC4B,aAAX;AACE,aAAO,EACL,GAAGpB,KADE;AAELF,QAAAA,IAAI,EAAEK;AAFD,OAAP;;AAIF;AACE,aAAOH,KAAP;AA/CJ;AAiDD;AAED;;;;;;;;AAMA,SAASO,QAAT,CAAkB;AAAEc,EAAAA;AAAF,CAAlB,EAAoC;AAClCT,EAAAA,YAAY,CAACU,OAAb,CAAqB,aAArB,EAAoCD,YAApC;AAEA9B,EAAAA,IAAI,CAACwB,QAAL,CAAcC,OAAd,CAAsBC,MAAtB,CAA6B,eAA7B,IAAiD,UAASI,YAAa,EAAvE;AACD;;AAED,eAAetB,OAAf","sourcesContent":["import Http from \"utils/Http\";\r\nimport * as types from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  signInFailed: false,\r\n  isPending: false,\r\n  error: {},\r\n  user: null\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case types.AUTH_SIGNIN_SUCCEEDED:\r\n      console.log(\"inside reducer\", payload);\r\n\r\n      setToken(payload);\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        isPending: false,\r\n        signInFailed: false\r\n      };\r\n    case types.AUTH_SIGNIN_PENDING:\r\n      return { ...state, isPending: true, error: {}, signInFailed: false };\r\n    case types.AUTH_SIGNIN_FAILED:\r\n      return {\r\n        ...state,\r\n        isPending: false,\r\n        error: payload,\r\n        signInFailed: true\r\n      };\r\n    case types.AUTH_CHECK:\r\n      const accessToken = localStorage.getItem(\"accessToken\");\r\n      const currentState = {\r\n        ...state,\r\n        isAuthenticated: !!accessToken\r\n      };\r\n\r\n      if (currentState.isAuthenticated) {\r\n        Http.defaults.headers.common[\"Authorization\"] = `Bearer ${accessToken}`;\r\n      }\r\n\r\n      return currentState;\r\n    case types.AUTH_SIGNOUT:\r\n      // clear tokens\r\n      localStorage.removeItem(\"accessToken\");\r\n\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null\r\n      };\r\n    case types.AUTH_SET_USER:\r\n      return {\r\n        ...state,\r\n        user: payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n/**\r\n * Stores the access_token in local storage\r\n * and updates the HTTP header\r\n *\r\n * @param paload\r\n */\r\nfunction setToken({ access_token }) {\r\n  localStorage.setItem(\"accessToken\", access_token);\r\n\r\n  Http.defaults.headers.common[\"Authorization\"] = `Bearer ${access_token}`;\r\n}\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}