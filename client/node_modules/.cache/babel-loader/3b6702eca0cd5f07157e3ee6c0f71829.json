{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nessia.brb\\\\development\\\\React-JS\\\\the-project-one\\\\src\\\\layouts\\\\Main.js\";\nimport React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Drawer, Box } from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9)\n    }\n  },\n  container: {\n    padding: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\"\n  },\n  fixedHeight: {\n    height: 240\n  },\n  listSideBar: {\n    paddingLeft: theme.spacing(2)\n  }\n}));\nexport default function Main(props) {\n  const {\n    children\n  } = props;\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    variant: \"permanent\",\n    classes: {\n      paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n    },\n    open: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"test\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(List, {\n    className: classes.listSideBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"List\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(\"main\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Box, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, children)));\n}","map":{"version":3,"sources":["C:/Users/nessia.brb/development/React-JS/the-project-one/src/layouts/Main.js"],"names":["React","useState","clsx","makeStyles","Drawer","Box","List","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","drawerWidth","useStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","drawerPaper","position","whiteSpace","width","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","spacing","breakpoints","up","container","paper","overflow","flexDirection","fixedHeight","height","listSideBar","paddingLeft","Main","props","children","classes","open","setOpen","content"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Drawer, Box } from \"@material-ui/core\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24 // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar\r\n  },\r\n\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9)\r\n    }\r\n  },\r\n  container: {\r\n    padding: theme.spacing(4)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\"\r\n  },\r\n  fixedHeight: {\r\n    height: 240\r\n  },\r\n  listSideBar: {\r\n    paddingLeft: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nexport default function Main(props) {\r\n  const { children } = props;\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(true);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\r\n        }}\r\n        open={true}\r\n      >\r\n        <div>test</div>\r\n        <Divider />\r\n        <List className={classes.listSideBar}>List</List>\r\n        <Divider />\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <Box className={classes.container}>{children}</Box>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}